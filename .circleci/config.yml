version: 2.0
jobs:
  build:
    docker:
      - image: takahiroi/suilog_app:latest
      - image: takahiroi/suilog_db:latest
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_suilog_db
          MYSQL_USER: suilog
          MYSQL_PASSWORD: Yuri1226
          

    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      - restore_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi 
      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm run dev
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
      # プライマリ コンテナは MySQL ではないため、準備が完了するまで sleep コマンドを実行します。
          name: MySQL が準備できるまで待機
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: MySQL CLI のインストール; ダミー データのインポート
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u user -ppassw0rd test_suilog_db < suilogtest
      - run:
          name: php test
          command: vendor/bin/phpunit
      - store_artifacts: 
          path: ./storage/logs


  deploy:
    docker:
      - image: takahiroi/suilog_app:latest
    steps:
      - add_ssh_keys
      - run:
          name: deploy 
          command: | # シードを入れたい時はこれを、php artisan migrate:refresh --seed --force && \
            ssh -o StrictHostKeyChecking=no -t webapp@${HOST_NAME} "cd suilog_product && \
              git pull origin master && \
              composer install -n --no-dev --prefer-dist && \ 
              php artisan config:cache" 


workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master